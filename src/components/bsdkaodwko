// constructor(props) {
    //         super(props);
    //         this.state = {
    //             notes: getInitialData(),
    //         }
    
    //         this.onDeleteHandler = this.onDeleteHandler.bind(this);
    //         this.onAddNoteHandler = this.onAddNoteHandler.bind(this);
            
    //     }
    //     onDeleteHandler(id) {
    //         const notes = this.state.notes.filter(note => note.id !== id);
    //         this.setState({ notes });
    //     }
    //     onAddNoteHandler({ title, body}) {
    //         this.setState((prevState) => {
    //             return {
    //                 notes: [
    //                     ...prevState.notes,
    //                 {
    //                     id: +new Date(),
    //                     title,
    //                     body,
    //                     createdAt: new Date().toJSON(),
    //                     archived: false,
    //                 }
    //                 ]
    //             }
                
    //         })
    //     }

    //     render() {
    //         return (
    //             <div className="note-app__body">
    //                 <NoteInput />
    //                 <h2>Catatan Aktif</h2>
    //                 <NotesList notes={this.state.notes} onDelete={this.onDeleteHandler} />
    //             </div>
    //             )
    //     }
// }

// <NotesList notes={this.state.notes} onDelete={this.onDeleteHandler} /> 


    // onAddNoteHandler({ title, body}) {
    //     this.setState((prevState) => {
    //         return {
    //             notes: [
    //                 ...prevState.notes,
    //             {
    //                 id: +new Date(),
    //                 title,
    //                 body,
    //                 createdAt: new Date().toJSON(),
    //                 archived: false,
    //             }
    //             ]
    //         }
            
    //     })
    // }

    // this.onAddNoteHandler = this.onAddNoteHandler.bind(this);


//     import React, { Component } from 'react'
// import { getInitialData } from '../utils/initialData'
// import NoteInput from './NoteInput'
// import NoteList from './NoteList'
 
// export class Body extends Component {
 
//   constructor(props) {
//     super(props);
 
//     this.state = {
//       notes: getInitialData(),
//     }
 
//     this.onArchiveHandler = this.onArchiveHandler.bind(this);
//     this.onDeleteHandler = this.onDeleteHandler.bind(this);
//     this.onAddNoteEventHandler = this.onAddNoteEventHandler.bind(this);
//   }
 
//   onAddNoteEventHandler({title, body}){
//     let date = new Date();
//     this.setState((prevState) => {
//       return {
//         notes : [
//           ...prevState.notes,
//           {
//             id: +new Date(),
//             createdAt: date.toISOString(),
//             title,
//             body,
//             archived: false
//           }
//         ]
//       }
//     })
//   }
 
//   onDeleteHandler(id) {
//     const notes = this.state.notes.filter(note => note.id !== id);
//     this.setState({ notes });
//   }
 
//   onArchiveHandler(id){
//     const notes = this.state.notes.map((note) => note.id === id ? {...note, archived : !note.archived} : note)
//     this.setState({ notes });
//   }
 
//   render() {
//     const activeNotes = this.state.notes.filter((note) => {
//       return note.archived === false;
//     });
//     const archivedNotes = this.state.notes.filter((note) => {
//       return note.archived === true;
//     })
 
//     return (
//       <div className='note-app__body'>
//           <NoteInput
//             addNote={this.onAddNoteEventHandler}/>
//           <h2>Catatan Aktif</h2>
//           <NoteList 
//             notes={activeNotes} 
//             onDelete={this.onDeleteHandler}
//             onArchive={this.onArchiveHandler}/>
//           <h2>Arsip</h2>
//           <NoteList 
//             notes={archivedNotes} 
//             onDelete={this.onDeleteHandler}
//             onArchive={this.onArchiveHandler}/>
//       </div>
//     )
//   }
// }
 
// export default Body





// {activeNotes.length > 0 ? <NotesList notes={activeNotes} addNote={addNote} onDelete={onDelete} onArchive={onArchive} /> : <p className="notes-list__empty-message">Tidak ada catatan</p> }
//         <h2>Arsip</h2>
//         {archivedNotes.length > 0 ? <NotesList notes={activeNotes} addNote={addNote} onDelete={onDelete} onArchive={onArchive} /> : <p className="notes-list__empty-message">Tidak ada catatan</p> }
//         </div>